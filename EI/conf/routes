# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Página principal (CBase)
GET     /                           base.CBase.index()
POST    /getProfesor                base.CBase.mostrarProfesor()


# Páginas de alumnos (CAlumno)

GET     /alumno                       controllers.CAlumno.index()
POST    /alumno/iniciaSesion          controllers.CAlumno.iniciarSesionA()
GET     /alumno/cerrarSesion          controllers.CAlumno.cerrarSesionA()
POST    /alumno/registrar             controllers.CAlumno.registrarA()
POST    /alumno/modificar             controllers.CAlumno.modificarInformacionA()
POST    /alumno/eliminar              controllers.CAlumno.eliminaRegistroA()
GET     /alumno/cursosDisponibles     controllers.CAlumno.obtenerCursos()
POST    /alumno/agregarCurso          controllers.CAlumno.agregarCursoA()
POST    /alumno/eliminarCurso         controllers.CAlumno.eliminarCursoA()
GET     /alumno/verCurso/:id          controllers.CAlumno.verCursoA(id: Integer)
GET     /alumno/obtenerConstancia     controllers.CAlumno.obtenerConstancia(id: Integer)


# Páginas de profesores (CProfesor)

GET     /profesor                     controllers.CProfesor.index()
POST    /profesor/iniciaSesion        controllers.CProfesor.iniciarSesionP()
GET     /profesor/cerrarSesion        controllers.CProfesor.cerrarSesionP()
POST    /profesor/registrar           controllers.CProfesor.registrarP()
POST    /profesor/modificar           controllers.CProfesor.modificarInformacionP()
POST    /profesor/eliminar            controllers.CProfesor.eliminaRegistroP()
GET    /profesor/agregarCurso        controllers.CProfesor.agregarCursoP(iniciado: Boolean)
POST    /profesor/agregarCurso        controllers.CProfesor.agregarCursoP(iniciado: Boolean)
GET     /descargarArchivo/:id/:file   controllers.CProfesor.descargaArchivos(id: Integer, file: Integer)
POST    /profesor/eliminarCurso       controllers.CProfesor.eliminarCursoP()
GET     /profesor/verCurso/:id        controllers.CProfesor.verCursoP(id: Integer)
GET     /profesor/cursosDisponibles   controllers.CProfesor.obtenerCursos()
POST    /profesor/autorizarCurso      controllers.CProfesor.autorizarCurso()
GET     /profesor/modificarCurso/:id controllers.CProfesor.modificarCursoP(id: Integer)
POST    /profesor/modificarCurso/:id controllers.CProfesor.modificarCursoP(id: Integer)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                 controllers.Assets.at(path="/public", file)
GET     /assets/profesorData/*file    controllers.Assets.at(path="/public/professordata", file)
